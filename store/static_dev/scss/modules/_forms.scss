@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes shake {

  0%,
  100% {
    transform: translateX(0);
  }

  20%,
  60% {
    transform: translateX(-5px);
  }

  40%,
  80% {
    transform: translateX(5px);
  }
}

// --- Auth Container and Tabs ---
.auth-container {
  max-width: 450px;
  margin: 2rem auto; // Reduced top/bottom margin slightly
  background: var(--card-background);
  padding: 2rem 2.5rem;
  border-radius: $border-radius;
  border: 1px solid var(--border-color);
  box-shadow: 0 4px 15px var(--box-shadow-color);
  transition: box-shadow 0.4s ease;

  &:hover {
    box-shadow: 0 8px 25px var(--box-shadow-color);
  }
}

.auth-tabs {
  display: flex;
  margin-bottom: 1.5rem;
  border-bottom: 1px solid var(--border-color);
  position: relative;
}

.auth-tab {
  flex: 1;
  padding: 0.8rem 1rem;
  text-align: center;
  font-size: 1.1rem;
  font-weight: 500;
  color: var(--text-color-secondary);
  background: transparent;
  border: none;
  border-bottom: 3px solid transparent;
  cursor: pointer;
  transition: all 0.3s ease;
  font-family: $font-family-button; // Poppins

  &:hover {
    color: var(--accent-color);
  }

  &.active {
    color: var(--accent-color);
    border-bottom-color: var(--accent-color);
    font-weight: 600;
  }
}

.tab-indicator {
  position: absolute;
  bottom: 0;
  height: 3px;
  background-color: var(--accent-color);
  transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.auth-form {
  display: none;

  &.active {
    display: block;
    animation: fadeIn 0.3s ease-in-out;
  }
}

// --- Form Fields (General) ---
.form-field {
  margin-bottom: 1.2rem;
  position: relative;
  opacity: 0;
  transform: translateY(10px);
  animation: fadeInUp 0.4s forwards;

  // Staggered animation delays
  &:nth-child(1) {
    animation-delay: 0.05s;
  }

  &:nth-child(2) {
    animation-delay: 0.1s;
  }

  &:nth-child(3) {
    animation-delay: 0.15s;
  }

  &:nth-child(4) {
    animation-delay: 0.2s;
  }

  &:nth-child(5) {
    animation-delay: 0.25s;
  }

  &:nth-child(6) {
    animation-delay: 0.3s;
  }

  &:nth-child(7) {
    animation-delay: 0.35s;
  }

  // Add more if needed

  // Reduce margin for specific groups
  &:has(.radio-group),
  &.checkbox-field {
    margin-bottom: 0.8rem;
  }
}

.form-field label {
  display: flex; // Changed from block to flex
  align-items: center;
  margin-bottom: 0.5rem;
  font-size: 0.9rem;
  font-weight: 500;
  color: var(--text-color-secondary);
  position: relative; // For underline effect

  // Underline effect on focus-within (excluding specific labels)
  &:not(.radio-group-label):not(.radio-label):not(.checkbox-label):not(.radio-button)::after {
    content: "";
    position: absolute;
    bottom: -3px;
    left: 0;
    width: 0;
    height: 2px;
    background-color: var(--accent-color);
    transition: width $transition-speed ease;
  }
}

// Add focus-within styling directly to form-field for the label effect
.form-field:focus-within label:not(.radio-group-label):not(.radio-label):not(.checkbox-label):not(.radio-button)::after {
  width: 100%;
}


.optional-text {
  font-size: 0.8rem;
  color: var(--text-color-secondary);
  opacity: 0.7;
  font-weight: normal;
  margin-left: 4px;
}

// --- Form Error Message ---
.form-error {
  color: var(--error-color);
  font-size: 0.85rem;
  margin-top: 0.3rem; // Reduced from 0.4rem
  display: none; // Initially hidden
  min-height: 1.2em; // Keep space even when hidden

  // Apply shake animation only when error is shown (managed by JS/widget)
  &.shake {
    animation: shake 0.4s linear;
  }
}

// Error display logic moved to JS (shows when wrapper has .error class)
// Remove this rule: .input-wrapper.error + .form-error { display: block; }

.form-field-description {
  font-size: 0.8rem;
  color: var(--text-color-secondary);
  margin-top: 0.3rem;
}

// --- Auth Button ---
.auth-button {
  width: 100%;
  padding: 0.9rem 1.5rem;
  background: var(--accent-color);
  color: $white;
  border: none;
  border-radius: 6px;
  font-size: 1rem;
  font-weight: 600;
  font-family: $font-family-button; // Poppins
  cursor: pointer;
  transition: all $transition-speed ease;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  margin-top: 1rem; // Keep margin-top
  position: relative;
  overflow: hidden;

  // Ripple effect
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.6s ease, height 0.6s ease;
    pointer-events: none; // Prevent interference
  }

  &:active::before {
    width: 300px; // Large enough to cover button
    height: 300px;
  }

  &:hover:not(:disabled) {
    background: var(--accent-hover);
    transform: translateY(-2px);
    box-shadow: 0 4px 10px rgba(var(--accent-color-rgb), 0.3); // Use RGB variable
  }

  &:disabled {
    opacity: 0.7;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  i {
    // Inherit styles from example (if icons are used inside)
    // Example: margin-right: 0.3rem; if icon is before text
  }
}

// --- Form Success Message ---
.form-success {
  color: var(--accent-color);
  font-size: 0.9rem;
  margin-top: 1.5rem;
  text-align: center;
  padding: 0.8rem;
  border: 1px solid var(--accent-color);
  border-radius: $border-radius;
  background-color: var(--accent-light);
  display: none;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;

  &.active {
    display: block;
    opacity: 1;
  }
}

// --- Additional Form Elements ---
.form-options {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  font-size: 0.9rem;
}

.form-check {
  display: flex;
  align-items: center;
}

.form-check-input {
  margin-right: 0.5rem;
  accent-color: var(--accent-color);
  cursor: pointer;
}

.form-check-label {
  color: var(--text-color-secondary);
  cursor: pointer;
  margin-bottom: 0; // Override default label margin
}

.auth-link {
  color: var(--primary-color);
  text-decoration: none;
  transition: color $transition-speed ease;

  &:hover {
    color: var(--accent-color);
    text-decoration: underline;
  }
}

.auth-switch-text {
  text-align: center;
  margin-top: 1.5rem;
  font-size: 0.9rem;
  color: var(--text-color-secondary);
}

// --- Styles for Specific Input Types ---

// Select
.select-wrapper {
  position: relative;
  display: flex;
  align-items: center;
}

.auth-select {
  width: 100%;
  padding: 0.8rem 1rem 0.8rem 2.5rem; // Adjust padding like auth-input
  border: 1px solid var(--border-color);
  border-radius: 6px;
  background: var(--input-bg);
  color: var(--text-color);
  font-size: 1rem;
  transition: all $transition-speed ease;
  height: 44px;
  appearance: none; // Remove default arrow
  cursor: pointer;

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px var(--input-focus);
    border-color: var(--accent-color);
  }
}

.select-arrow {
  position: absolute;
  right: 0.9rem;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  color: var(--text-color-secondary);
}

// Textarea
.auth-textarea {
  width: 100%;
  padding: 0.8rem 1rem 0.8rem 2.5rem; // Adjust padding like auth-input
  border: 1px solid var(--border-color);
  border-radius: 6px;
  background: var(--input-bg);
  color: var(--text-color);
  font-size: 1rem;
  transition: all $transition-speed ease;
  resize: vertical;
  min-height: 100px;
  font-family: $font-family-base; // Ensure font consistency

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px var(--input-focus);
    border-color: var(--accent-color);
  }
}

// File Input
.file-field {
  position: relative;
}

.file-input {
  position: absolute;
  left: 0;
  top: 0;
  opacity: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}

.file-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.8rem 1rem;
  background: var(--input-bg);
  border: 1px dashed var(--border-color);
  border-radius: 6px;
  color: var(--text-color-secondary);
  font-size: 0.9rem;
  transition: all $transition-speed ease;

  &:hover {
    background: rgba(var(--accent-color-rgb), 0.05);
    border-color: var(--accent-color);
  }
}

.file-name {
  margin-top: 0.5rem;
  font-size: 0.85rem;
  color: var(--text-color-secondary);
}

// Native Checkbox & Radio Specific Styles
.form-field.checkbox-field,
.form-field.radio-field {
  // Target specific container classes
  display: flex;
  align-items: center;
  margin-bottom: 0.8rem;
  gap: 0.5rem;
}

.checkbox-input,
.radio-input {
  // Applied to the input element itself
  margin: 0;
  cursor: pointer;
  accent-color: var(--accent-color);
  width: 1rem;
  height: 1rem;
  flex-shrink: 0;
}

.checkbox-label {
  font-size: 0.9rem;
  color: var(--text-color-secondary);
  cursor: pointer;
  flex: 1;
  user-select: none;
  display: flex;
  align-items: baseline;
  flex-wrap: wrap;
  gap: 4px;
  line-height: 1.4;
  margin-bottom: 0; // Override default label margin

  // Style links within the label
  .auth-link {
    font-size: inherit; // Ensure link size matches label
    line-height: inherit;
  }
}

.checkbox-text {
  // Span inside checkbox label
  color: var(--text-color-secondary);
}


// Radio Group (Native)
.radio-group {
  display: flex;
  flex-direction: column;
  gap: 0.3rem;
}

.radio-group-label {
  // The <label> acting as the group title
  display: block;
  margin-bottom: 0.3rem;
  font-size: 0.9rem;
  font-weight: 500;
  color: var(--text-color-secondary);
}

.radio-label {
  // Label associated with a single native radio input
  font-size: 0.9rem;
  color: var(--text-color-secondary);
  cursor: pointer;
  user-select: none;
  line-height: normal;
  margin-bottom: 0; // Override default label margin
}


// Button-like Radio Inputs
.radio-button-group {
  margin-bottom: 1.5rem;
}

// Reuse .radio-group-label for consistency

.radio-buttons {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
}

.radio-button {
  // The <label> acting as the button container
  position: relative;
  display: inline-block;
  cursor: pointer;
  text-decoration: none; // Remove underline from label
  margin-bottom: 0; // Override default label margin
}

.radio-input {
  // Hidden input for button-like radios
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.radio-btn {
  // The visible <span> styled as a button
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.7rem 1.2rem;
  background: var(--input-bg);
  border: 1px solid var(--border-color);
  border-radius: 6px;
  color: var(--text-color);
  font-weight: 500;
  font-size: 0.95rem;
  transition: all $transition-speed ease;
  font-family: $font-family-button; // Poppins
  min-width: 100px;
  text-align: center;
}

.radio-btn:hover {
  border-color: var(--accent-color);
  box-shadow: 0 2px 5px var(--box-shadow-color);
}

// Styles when the hidden radio input is checked
.radio-input:checked+.radio-btn {
  background: var(--accent-color);
  color: $white;
  border-color: var(--accent-color);
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(var(--accent-color-rgb), 0.3);
}

// Focus style applied to the visible button when hidden input has focus
.radio-input:focus+.radio-btn {
  box-shadow: 0 0 0 3px var(--input-focus);
}


// --- Responsive Adjustments ---
@media screen and (max-width: 768px) {
  .auth-container {
    max-width: 100%; // Use full width available with padding
    padding: 1.5rem;
    margin: 2rem 1rem; // Consistent margin
  }

  .auth-button {
    padding: 0.8rem 1rem;
  }

  .form-options {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }

  .auth-form {
    // Removed padding: 0; as container padding is adjusted
  }
}

@media screen and (max-width: 480px) {
  .auth-container {
    padding: 1.5rem 1rem; // Keep padding consistent
  }

  .auth-tabs {
    flex-direction: column;
    border-bottom: none;
    align-items: stretch; // Make tabs full width
  }

  .auth-tab {
    width: 100%;
    margin-bottom: 0.5rem;
    border-bottom: 1px solid var(--border-color);
    position: relative; // For potential future indicators if needed

    &:last-child {
      // Removed border-bottom: none; -> Keep border for all in column layout
    }

    &.active {
      // Replace border-bottom with a different indicator if desired,
      // or simply rely on text color/weight change.
      // Example: add a left border instead
      // border-left: 3px solid var(--accent-color);
      // border-bottom-color: transparent; // Remove bottom border when active
    }
  }

  .tab-indicator {
    display: none; // Hide line indicator on mobile
  }

  .form-field {
    margin-bottom: 1rem;
  }

  .auth-button {
    font-size: 0.9rem;
  }

  // Responsive radio buttons
  .radio-buttons {
    flex-direction: column;
    width: 100%;
  }

  .radio-button {
    // Label container
    width: 100%;
  }

  .radio-btn {
    // Span button
    display: flex; // Ensure flex properties apply
    width: 100%;
  }
}

.required-indicator {
  color: var(--error-color); // Use the existing error color variable
  margin-left: 4px; // Add a small space after the label text
  font-weight: bold; // Make it stand out a bit more
  // vertical-align: super; // Optional: If you want it slightly raised
  // font-size: 1.1em;      // Optional: Make it slightly larger
}