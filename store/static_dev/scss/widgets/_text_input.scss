.input-wrapper {
  position: relative;
  display: flex;
  align-items: center;
}

.auth-input {
  width: 100%;
  // Adjusted padding: top/bottom, right (for feedback/toggle), bottom, left (for icon)
  // Default padding assumes no toggle icon
  padding: 0.8rem 2.5rem 0.8rem 2.5rem;
  border: 1px solid var(--border-color);
  border-radius: 6px;
  background: var(--input-bg);
  color: var(--text-color);
  font-size: 1rem;
  font-family: $font-family-base; // Ensure base font
  transition: all $transition-speed cubic-bezier(0.4, 0, 0.2, 1); // Updated transition
  height: 44px;
  line-height: 1.5;
  transform-origin: left; // For focus scale effect

  &::placeholder {
    color: var(--text-color-secondary);
    opacity: 0.8;
  }

  &:focus {
    outline: none;
    border-color: var(--accent-color);
    box-shadow: 0 0 0 3px var(--input-focus); // Updated focus shadow
    transform: scale(1.01); // Added scale effect
  }

  // Number input appearance reset (Keep)
  &[type='number'] {
    -moz-appearance: textfield;
  }

  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  // --- UPDATED: Adjust padding when password toggle is present ---
  // Select the input specifically within a wrapper that *contains* the toggle
  .input-wrapper:has(.password-toggle-icon) & {
    padding-right: 4rem; // Increased padding to accommodate feedback AND toggle
  }

  // --- End UPDATED ---
}

// Main icon (left)
.input-icon {
  position: absolute;
  left: 0.9rem;
  top: 50%;
  transform: translateY(-50%);
  color: var(--text-color-secondary);
  font-size: 1rem; // Slightly larger icon
  pointer-events: none;
  transition: color $transition-speed ease;
}

// Icon color change on focus
.auth-input:focus+.input-icon {
  color: var(--accent-color);
}

// --- NEW: Password toggle icon styles ---
.password-toggle-icon {
  position: absolute;
  right: 0.9rem; // Positioned on the far right
  top: 50%;
  transform: translateY(-50%);
  color: var(--text-color-secondary);
  cursor: pointer;
  font-size: 1rem; // Consistent icon size
  transition: color $transition-speed ease;
  z-index: 2; // Ensure it's clickable above feedback icons

  &:hover {
    color: var(--accent-color);
  }
}

// --- End NEW ---

// Feedback icons (success/error)
.input-feedback {
  position: absolute;
  // --- UPDATED: Adjusted right position to make space for password toggle ---
  right: 2.8rem; // Give space (0.9rem toggle + ~1rem icon width + ~0.9rem gap)
  // --- End UPDATED ---
  top: 50%;
  transform: translateY(-50%);
  font-size: 1rem; // Consistent icon size
  opacity: 0;
  transition: opacity $transition-speed ease;
  pointer-events: none;
  z-index: 1; // Below password toggle if they overlap
}


// Show feedback icons based on wrapper class
.input-wrapper.error .input-feedback.error-icon {
  opacity: 1;
  color: var(--error-color);
}

.input-wrapper.success .input-feedback.success-icon {
  opacity: 1;
  color: var(--accent-color);
}


// Input state styling (wrapper applies border/shadow to input)
.input-wrapper.error .auth-input {
  border-color: var(--error-color);

  // Focus style for error state
  &:focus {
    box-shadow: 0 0 0 3px rgba(220, 53, 69, 0.25); // Error focus shadow
    transform: scale(1.01); // Keep scale effect
  }
}

.input-wrapper.success .auth-input {
  border-color: var(--accent-color);

  // Focus style for success state (same as default focus)
  &:focus {
    box-shadow: 0 0 0 3px var(--input-focus);
    transform: scale(1.01); // Keep scale effect
  }
}

// Icon color in different states
.input-wrapper.error .input-icon {
  color: var(--error-color);
}

// --- UPDATED: Also color toggle icon in error state ---
.input-wrapper.error .password-toggle-icon {
  color: var(--error-color);
}

// --- End UPDATED ---


.input-wrapper.success .input-icon {
  color: var(--accent-color);
}